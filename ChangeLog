2015-11-06 NOTE

This Changelog is now abandoned.  Use git log instead.

2015-11-06  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-96

	* pyatmlab/constants.py: Add nano and giga

	* pyatmlab/datasets/tovs.py: Add clarification comment

	* pyatmlab/db.py: Initialise fromDir from existing argdict.
		Fix bug with db clear.

	* pyatmlab/physics.py(SRF): Add methods for string representation and
	SRF shift

	* pyatmlab/tools.py(mutable_cache): Comment out unreachable code and
	fix bug
	
2015-09-15  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-95

	* pyatmlab/db.py:

	- Use progressbars, yahoo!

2015-08-25  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-94

	* doc/source/index.rst: Small fixes

	* pyatmlab/arts/_handlers(Matrix):

	- Correct order of dimensions

	* pyatmlab/arts/xml.py:

	- Remove unused classes

	* pyatmlab/collocations.py(SamePlatformCollocatedDataset):

	- Start skeleton class for AVHRR/HIRS.  No content yet.

	* pyatmlab/constants.py:

	- Add constant for tera

	* pyatmlab/dataset.py(MultiFileDataset):

	- In preparating for HIRS, use and propagate an **extra set of
	keyword arguments, to be used to pass meta-information such as what
	satellite a sensor part of a series belongs to.

	* pyatmlab/datasets/tovs.py:

	(HIRS):

	- Copy over some information on headers and line.  Not very tested
	yet.

	(IASI):

	- Introduce tolerance in wavenumber equivalence testing, due to loss
	of precision when storing this information in text on disk and going
	back and forth to and from frequencies.

	* pyatmlab/db.py:

	- Add binning based on PCA.  This affects many methods in several
	classes.

	* pyatmlab/tools.py(find_next_time_instant):

	- Started work on new function, unfinished and untested.

2015-08-07  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-93
	
	* pyatmlab/arts/*.py:

	- New package with functionality to read ArtsXML data.

	* doc/source/index.rst:

	- Add new package arts and new module arts.xml

	* pyatmlab/datasets/tovs.py(IASI): 
	
	- Bugfix

	* pyatmlab/db.py:

	- Reimplement lookup table.  Functionality now distributed over a
	number of different classes, depending on small (in-memory) or large
	(on-disk) and on what is done with the cells (store all, store one,
	store stats).

	* pyatmlab/physics.py:

	- Several small bugfixes

	* setup.py:

	- Also consider pyatmlab.arts package

2015-07-21  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-92

	* pyatmlab/instruments.py:

	- Point out those are theoretical/idealised instruments, not suitable
	for actual SRFs.

	* pyatmlab/physics.py(SRF):

	- Added class where I consolidate functionality related to real SRFs.

2015-07-20  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-91

	* pyatmlab/io.py(read_arts_srf):
	
	- Also return centres

	* pyatmlab/physics:
	
	(planck_f):

	- Add function to calculate Planck function (per frequency)

	(estimate_effective_temperature):

	- Calculate effective temperature according to Weinreb et al. (1981).
	  This is to be used in polychromatic radiance to brightness
	  temperature conversions.

2015-07-16  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-90

	* pyatmlab/physics.py(spectral_to_channel_bt):

	- Added note that the physics here is incorrect and that the
	calculation needs to change.

	- Added missing return statement, oops.

2015-07-14  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-89

	* pyatmlab/constants.py: Add micro=1e-6

	* pyatmlab/datasets.tovs(HIRS*): Add satellites

	* pyatmlab/physics.py(specrad_frequency_to_planck_bt): Bugfix

2015-07-13  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-88

	* pyatmlab/datasets/tovs.py(IASI._read):

	- Be more verbose with DEBUG logging

	* pyatmlab/physics.py:
	
	- Moved constants out of 'c.' module again, to aid numexpr.

	(specrad_frequency_to_brightness_temperature):

	- Severe speedup using numexpr.  For a single IASI granule (145,190,760
	radiances), wall time to run this on a JASMIN node is reduced from 25
	seconds to 2 seconds.

	(spectral_to_channel_bt):

	- Similar speedup as above, but rather from ~2 seconds to ~0.2
	seconds.  As this may need to be run for each channel the total
	speedup is similar.

2015-07-10  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-87

	* pyatmlab/physics.py(specrad_to_channel_bt):

	- Added function to calculate channel BT from spectral radiances

2015-07-09  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-86

	* pyatmlab/config.py:

	- Use extended interpolation

	- Always load configuration

	* pyatmlab/constants.py:

	- Add centi

	* pyatmlab/dataset.py:

	(Dataset.setlocal()):

	- In this method, called from __init__(), go through configuration
	file and set attributes from it.  This will be used for any localised
	settings such as basedir, subdir, etc.

	(Hyperspectral):

	- New mixin class for any hyperspectral instrument, such as IASI.

	* pyatmlab/dataset/tovs.py:

	(IASI):

	- Added class with reader for IASI data

	* pyatmlab/physics.py:

	(wavelength2wavenumber): Added

	(wavenumber2wavelength): Added

	(specrad_wavenumber2frequency): Added

	(specrad_frequency_to_planck_bt): Added

2015-07-07  Gerrit Holl  <g.holl@reading.ac.uk>
	
	* pyatmlab-0-0-85

	* pyatmlab/io.py(read_arts_srf):

	- Added small function to read SRF from ARTS XML format.  Eventually
	this should be superseded by more generic functionality to interact
	with ARTS XML, like was present in PyARTS.

2015-07-06  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-84

	* doc/source/index.rst:

	- Added missing modules

	* pyatmlab/{collocations,dataset,db,io,physics,tools}.py:

	- Fix docstring syntax errors
	
2015-07-02  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-83

	* pyatmlab/datasets/tovs.py(HIRS):

	- Fix typos

2015-07-02  Gerrit Holl  <g.holl@reading.ac.uk>

	* pyatmlab-0-0-82

	* pyatmlab/datasets/tovs.py(HIRS):

	- Fix typo

2015-07-02  Gerrit Holl  <g.holl@reading.ac.uk>:

	* pyatmlab-0-0-81

	* LICENSE: Updated years

	* setup.py: Added new package pyatmlab.datasets

	* pyatmlab/dataset.py: Use logging.error instead of print

	* pyatmlab/io.py:

	- Move collect_values function here

	* pyatmlab/tools.py:

	- Added a safe_eval function, inspired by
	  http://stackoverflow.com/a/9558001/974555
	
	* pyatmlab/datasets.py:

	- Removed this module

	* pyatmlab/datasets/{__init__,groundbased,tanso}.py:

	- Moved contents of datasets.py to this new package

	* pyatmlab/datasets/tovs.py:

	- Started working on HIRS reading routine
	
2015-04-28  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-80

	* doc/source/index.rst:

	- Added missing modules, pointed out dependencies

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	- When summarising partial column differences, also show percentages

2015-04-16  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-79

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	- Also show median primary, secondary

	* pyatmlab/graphics.py:

	- Move plotdatadir back to io

	- Accomodate 3d array writing

	* pyatmlab/io.py:

	- Move plotdatadir back here

	- Added function savetxt_3d that is like savetxt but writes in 3D

	* pyatmlab/physics.py:

	- Accommodate 3D array writing for sensitivity densities

2015-04-14  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-78

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	- Write DOFs for partial columns
	- Use rounder number to normalise linear regression so I can easily
	denormalise it after

2015-04-10  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-77

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- Incorporate the ability to flag data

	(ProfileCollocationDescriber):

	- Fix bugs regarding conversion factors

	- Fix bug in processing uncollapsed data

	* pyatmlab/dataset.py:

	- Incorporate flagging.  Implement by child making a flag() method.

	- More flexible matching for 'unique fields', now both self and
	other_obj have this set and the intersection is used.  Allows for
	different fields to be used when matching DMPs or flags.

	* pyatmlab/datasets.py(ACEFTS):

	- Implement flagging method and set unique_fields accordingly.

2015-04-08  Gerrit Holl  <gerrit.holl@utoronta.ca>:

	* pyatmlab-0-0-76

	* pyatmlab/collocations.py:

	(ProfileCollocationDescriber):

	- Calculate full range of nd based on different p/T alternatives, take
	the mean and range.

	- Correctly divide secondary error by âˆšN.  Requires quite some
	recoding.

	- Correctly calculate regression confidence band using statsmodels
	standard method

	(collapse):

	- Return sort order, needed by some

2015-04-06  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-75

	* pyatmlab/collocations.py:
	
	(ProfileCollocationDescriber):

	- Start working to estimating error propagation of T and p into
	partial columns

	- Use sqrt(0.05) rather than 0.05 for confidence interval for partial
	column linear regression, and write all estimates to datafile for
	pgfplots

	(collapse):

	- Collapse both ways!

2015-04-05  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-74

	* pyatmlab/collocations.py:

	(ProfileCollocationDescriber):

	- Improve collapsing.  Consider that the primary is being smoothed by
	the secondary, for a set of N (prim, sec) collocations where all
	secondaries are different and all primary are supposed to be
	identical, they no longer are if the primary is being smoothed by the
	secondary.  Therefore, we need to average not only the secondary but
	also the primary.

	- Implement a weighted least squares fit for the partial column
	difference visualisation.  Should consider using ODR instead as there
	is an error on the x-value too.

2015-04-03  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatlmlab-0-0-73

	* pyatmlab/collocations.py:

	(ProfileCollocationDescriber): Implement collapsing.  Required updates
	in several places as it means I need to postpone applying the mask
	until the end, because prior to collapsing I need to combine
	information from the core collocations with whathever has been
	regridded, smoothed, and processed, so I should not thin the latter
	yet.

	(collapse): Improve

	* pyatmlab/physics.py(AKStats):

	- Write out datetimes in form pgfplots can understand

2015-03-24  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-72

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	(.partial_columns):

	- Optionally also return profiles with partial columns and other stuff
	appended, this is useful/essential for some visualisations, such as
	the dof-dependency.

	(.plot_aks):

	- Write aks along with diagonal ('nominal height') using the
	somewhat new io.write_data_to_files function.  Fix bug in writing AK
	stats, pass on right info to summarise.

	* pyatmlab/io.py(write_data_to_files): Improve docs

	* pyatmlab/physics.py(AKStats): Use colourmap Spectral_r as a
	colourmap

2015-03-23  Gerrit Holl  <gerrit.holl@utoronto.ca>:


	* pyatmlab-0-0-71

	* pyatmlab/collocations.py(ProfileCollocationDescriber.visualise_pc_comparison):

	- Also write error estimates

2015-03-20  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-70

	* pyatmlab/collocations.py:

	(CollocatedDataset.read_aggregated_pairs):

	- When a granule contains time both inside and outside the requested
	time interval, select only those collocations within the time (in case
	of primary) or within the time +/- the interval (in case of secondary)
	and report on this.

	(ProfileCollocationDescriber):

	- Fix bug in dataname_compare_profiles leading to the targ being eaten
	up.

	(ProfileCollocationDescriber.visualise_profile_comparison):

	- Fix bug, move data writing to correct level of indentation

2015-03-16  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-69

	* pyatmlab/collocations.py(collapse):

	- Added function to collapse secondary upon primary

2015-03-06  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-68

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	(.partial_columns):

	- Bugfix, make sure callee has parcols

	(._get_xa_ak):

	- Bugfix, avoid sending datetime64 to joblib.Memory

	(_get_smoothing_error):

	- Don't pass unsmoothed data on to get_additional_field,
	use smoothed data to choose error estimates to obtain.

2015-03-03  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-67

	* pyatmlab/collocations.py(collocations.py):

	(CollocatedDataset.__repr__): Add method

	(CollocationDescriber):

	- Use joblib.Memory for several methods
	- Move fignames to ProfileCollocationDescriber as they're only
	relevant there

	  (regrid_profiles, compare_profiles_raw):

	  - Rather than altering state, return z, so this can be cached

	  (smooth):

	  - Return hash rather than tuple

	  (partial_columns, compare_profiles_smooth):

	  - Adapt for changed signature in smooth

	* pyatmlab/dataset.py:
	
	(Dataset):

	- Implement memoisation for several methods

	(MultiFileDataset):

	- Part of this, implement __getstate__ and __setstate__ so we can skip
	self.granule_start_times.  Move _open_granule_file code to its own
	method.

	* pyatmlab/datasets.py(Eureka_PRL_CH4_HDF):

	- Implemented timezone corrections again but finally it looks like
	we're back in UTC

	* pyatmlab/io.py(write_data_to_files):

	- Dedicated function to write data to files (for pgfplots), rather
	than relying on the patchy addition to graphics.print_or_show.

	* pyatmlab/tools.py:

	(mark_for_disk_cache): Mark method for caching with joblib.Memory, so
	that it can be actually applied after object initialisation

	(setmem): helper to be called from relevant __init__ method

2015-02-20  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-66

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	(interpolate_profiles):

	- Add interpolation matrices to the returned p_int, s_int objects so
	that they will not be lost later.

	(smooth):

	- Be more verbose as to keep track of what is going on

	- DISABLE limiting to shared range, as this causes problems in keeping
	track of interpolation matrices that can be consistently used if error
	covariances are obtained only later.  Instead, flag interpolation
	matrices with nans where extrapolation would be going on.

	- Only return error if requested.  In some cases, such as for TANSO, I
	can't get S because bucketing is based on partial columns, that can
	only be calculated after smoothing.  In this case, postpone the
	error estimations, but do communicate all information needed to
	consistently regrid and smoothen error estimates.

	(partial_columns):
	
	- Adapt for changed signature in smooth()

	- Don't hardcode for "CH4_profile"

	- Rewrite all operations in terms of linear operators

	- Apply same linear operators to error estimates, return those as well

	(compare_profiles_raw, compare_profiles_smooth):

	- Adapt for changed signature of interpolate_profiles()

	(_limit_to_shared_range):

	- Made changen in order to fix problems elsewhere, but this method is
	disabled now anyway...

	(_calc_error_propagation):

	- Adapt to (properly?) take care of nans in W_1 and S_1.  The ones in
	W_1 are worst because pinv might hang!

	(_get_smoothing_error):

	- Move code to calculate the smoothing error out of smooth() because I
	might need to call this one separately if TANSO is involved.

	* pyatmlab/dataset.py(Dataset):

	(extend_with_doy_localtime):

	- Add doy and localtime to ndarray

	(extend_with_dofs):

	- Add dofs to ndarray

	* pyatmlab/db.py(SimilarityLookupTable):

	(get_index_tuple):

	- Return only a single tuple.

	(get_index_tuples):

	- Yield many tuples.

	(lookup):

	- Lookup the entry for a single datapoint

	(lookup_all):

	- Lookup the entries for many datapoints

	(lookaround):

	- When a particular entry is not found, average neighbouring entries

	* pyatmlab/math.py:
	
	(linear_interpolation_matrix):

	- Fill extrapolated values with nan, not edges

	(regrid_ak):

	- Take proper care of nans in z and A

	(smooth_profile):

	- Take proper care of nans in xa en ak

	* pyatmlab/physics.py(AKstats.dofs):

	- Adapt to avoid bug, see https://github.com/numpy/numpy/issues/5560

	* pyatmlab/stats.py(bin_nd_sparse):

	- Make sure we're not binning nans.

2015-02-06  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-65

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	(interpolate_profiles):

	- Do not consider all negative values invalid, don't want to flag
	small negative values that can arise from retrievals.  For now fix
	arbitrarily at -100

	- Bugfix: don't try to extend interpolation matrix to flagged areas of
	the z-grid, don't want nans in there.  Set W=0 elsewhere.

	(smooth):

	- For averaging kernel, separately keep track of need for axes
	swapping and need for conversion

	(partial_columns):

	- Rather than calling vmr2nd and integrate_with_height directly, call
	those with dummies (either 1 or columns of the unit matrix) so that I
	get scalars/vectors that I can use to calculate error propagation.
	Secondly, only consider the valid_range at the end, since off-diagonal
	errors outside the considered partial column range do propagate into
	the actual partial columns.

	- Also return estimated errors.

	* pyatmlab/dataset.py(ProfileDataset):

	- New attribute A_needs_swapping.  Defaults to NotTrueNorFalse.

	* pyatmlab/datasets.py:

	(TansoFTSBase):

	- Set A_needs_swapping=False

	(ACEFTS.read_single):

	- Bugfix: error covariance diagonal should be set to *squares* of the
	reported errors, not the reported errors themselves.

	(Eureka_PRL_CH4_HDF):

	- Set A_needs_swapping = True

	(_read):

	- Make sure I actually DO turn around all fields that need to be
	turned around.

	- Make sure all SI conversions are applied exactly as defined in the
	source.  Except for some.

	* pyatmlab/math.py(get_transformation_matrix):

	- Obtain standard matrix for the linear transformation for ANY linear
	function.  This "standard matrix" is m x n (m>0, n>0), so it can also
	be a vector in practice.  See Lay (2003), Theorem 10 (page 83).


2015-02-02  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-64

	* pyatmlab/collocations.py(ProfileCollocationDescriber):

	- Fix bug in error propagation under smoothing (S_1, S_2).  It appears
	to work now!  Next step will be to calculate error in profiles and
	partial columns, again according to Vigouroux et al.

2015-01-30  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-63

	* pyatmlab/collocations.py:

	(CollocatedDataset): Bugfix in case when primary granule is much
	longer than secondary granule

	(ProfileCollocationDescriber): 

	- Bugfix in flagging interpolation matrix

	- More code for error propagation calculations.  Not working yet.

	* pyatmlab/datasets.py:

	(Dataset): Change metaclass.  No need to have ABCMeta, was a
	misunderstanding.  Do use DocStringInheritor.

	(ACEFTS): Make fake (diagonal) SA matrix

	(Eureka_PRL_CH4_HDF):

	- Set necessary attributes: A_needs_converting, range, aliases
	- Also read CH4.MIXING.RATIO.VOLUME_ABSORPTION.SOLAR_APRIORI (why was
	it missing?)
	- Turn around profiles when z is descending

	* pytmlab/physics.py:

	- Don't do dof

	* pyamtlab/tools.py(DocStringInheritor):

	- Copied metaclass recipe by Paul McGuire with a small addition.

2015-01-28  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-62

	* pyatmlab/math.py(regrid_ak):

	- Also return interpolation matrices W.

	* pyatmlab/collocations.py:

	(ProfileCollocationDescriber):

	- Split off class with methods relevant only for profiles, from parent
	class

	- Rearrange methods in source code

	(ProfileCollocationDescriber.smooth):

	- Make method more generic, no more hardcoded CH4_profile

	(ProfileCollocationDescriber._regrid_xa_ak):

	- Also return interpolation matrices W.

	(ProfileCollocationDescriber.interpolate_profiles):

	- When interpolating, keep track of interpolation matrices.

	(ProfileCollocationDescriber._calc_error_propagation):

	- Calculate error propagation upon smoothing and regridding, following
	Vigouroux et al. (2007) and Calisesi et al. (2005)

	* pyatmlab/physics.py(AKStats):

	- Bugfix, don't bin visualisingly by all bins I use for the db to
	Naoko

2015-01-22  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-61

	* pyatmlab/dataset.py(SingleFileDataset.read):

	- Make sure we pass self.srcfile to super().read() if nothing is
	given.  This in turn ensures it will be converted from Path to str if
	needed.

	* pyatmlab/datasets.py(Eureka_PRL_CH4_HDF):

	- Adapted from EurekaHDF.  Fixed remaining bugs in reading routine.
	It appears everything works now.

2015-01-21  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-60

	* pyatmlab/db.py(SimilarityLookupTable):

	- Added methods for string representations

	- Fix bug in pickling in toFile and fromFile

	- Don't be fooled by nans

2015-01-20  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-59

	* pyatmlab/collocations.py(CollocationsDescriber):

	(plot_aks):

	- Make sure that partial columns are added before AKStats.summarise is
	  called, as this data will be needed
	
	(partial_columns):

	- Add parcol_CH4 to self.p_col and self.s_col after calculating it.

	* pyatmlab/db.py(SimilarityLookupTable):

	- New class used to construct a set of diverse TANSO profiles

	* pyatmlab/math.py(mad):

	- Added function to calculate median absolute deviation
	
	* pyatmlab/physics.py:
	
	(AKStats.summarise_dof_stats):

	- Rewrite and improve this method

	(mean_local_solar_time):

	- Move to new module `time`

	* pyatmlab/stats.py:

	(bin_nd_sparse):

	- Special version of bin_nd for sparse data (i.e. if we want only a
	few data points)

	(binsnD_t_2D):

	- Improved version of bins4D_to_2D, working from any number of
	dimensions, but reducing always to 2-D still

	* pyatmlab/time.py:

	- New module with mean_local_solar_time moved from physics, and
	dt_to_doy_mlst newly created to split datetime in doy and mlst.
	
2015-01-09  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-58

	* pyatmlab/collocations.py(CollocationDescriber):

	- More consistent with names in plots and files
	- Move dof histograms to AKStats

	* pyatmlab/dataset.py(Dataset):

	- Always have a timezone, defaulting to UTC

	* pyatmlab/physics.py:

	(AKStats.summarise): Overall function doing all stuff

	(plot_histogram): Plot DOF histograms, moved from CollocationDescriber

	(summarise_dof_stats): Worked on investigated DOF stats

	(mean_local_solar_time): Calc. from lon. and utctime

	* pyatmlab/stats.py:

	(bins_4D_to_2D): Downmerge 4D bin thingy to 2D.  Should be more
	generic...

	(iter_bins4D): Helper for above


2014-12-??  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-57

	* pyatmlab/collocations.py(CollocationDescriber):

	- Some very small changes
	
2014-12-04  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-56

	* pyatmlab/collocations.py(CollocationDescriber):

	- Fig bug with regridding.  No need to "remove data above range".  I'm
	going to interpolate on the new grid *anyway*.  Removing just risks
	removing too much and extrapolating where there is no need.  It's
	extrapolation I want to avoid, the way to do this is to set the target
	grid (from z_xh) small enough and not to remove data wherever I'm
	above lowest_z_max.

	- Write out all DOFs to get a histogram with pgfplots

	- Move get_shared_range into its own routine.  I might have to look at
	lower limits as well.

	* pyatmlab/datasets.py(EurekaHDF):

	- Remove workaround for reading PEARL HDF4 file, after bugfix in
	Python-hdf4.

	* pyatmlab/math.py:

	(linear_interpolation_matrix):

	- Oops, W was turned around.  Fixed.

	(regrid_ak):

	- Don't mess with the new grid.  Only with the old.

2014-11-28  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-55

	* pyatmlab/collocations.py(CollocationDescriber):

	- Fix bug when flagging data, flag on a copy not on the original,
	oops.

	- Start working toward treating errors.  Work in progress.

	* pyatmlab/constants.py:

	- Add avogadro constant and kilo

	* pyatmlab/datasets.py:

	- Started reading routine for HDF4-based Eureka data

2014-11-17  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-54

	* pyatmlab/collocations.py(CollocationDescriber):

	- In updated profile intercomparison, fix bug when some fields have
	more flagged data than others.

	- Write out z-grid after smoothing

	- Add y-label to ak-plots

	- Plot DOF histograms

	- Plot scatterplots as difference vs. reference 

	* pyatmlab/constants.py:

	- Add atm = 101325 # Pa

	* pyatmlab/datasets.py:

	(TansoFTSBase):

	- Fix bug, consider flags also for p_for_T

	(TansoFTSv10x):

	- Fix bug with flagging

	(ACEFTS):

	- Convert P_atm to P_pa

2014-11-07  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-53

	* pyatmlab/collocations.py(CollocationDescriber):

	- When interpolating profiles and further processing them, don't only
	hard-coded interpolate CH4 profiles, but also consider other fields,
	such as p and T.

	- A number of bugfixes

	* pyatmlab/dataset.py:

	(DataFileError):

	- Superclass for InvalidFileError and InvalidDataError.

	(Dataset): Give up on masked arrays

	(ProfileDataset): Implemented get_z_for = get_z by default

	* pyatmlab/datasets.py:

	(TansoFTSv10x):

	- When getting z, get either the z for the CH4 profile or for the T
	profile.

	(ACEFTS):

	- Describe aliase p -> P_atm

2014-11-05  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-52

	* pyatmlab/collocations.py(CollocationDescriber):

	- Continued work on partial columns.  Remains unfinished.

	- Split smoothing method in smaller methods

	* pyatmlab/dataset.py:

	(Dataset): Move 'range' attribute to ProfileDataset

	(ProfileDataset): Move 'range' attribute here.

	* pyatmlab/datasets.py:

	- Based on partial column sensitivity studies, write an estimated
	range for TANSO and ACE

	* pyatmlab/math.py:

	(layer2level):

	- Improve vectorisability

	(regrid_ak):

	- Make sure we take care of flagged/invalid data

	* pyatmlab/physics.py(AKStats):

	- When doing sensitivity studies, write some diagnostics

2014-10-29  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-51

	* pyatmlab/collocations.py(CollocationDescriber):

	- Plot both sensitivity range and dito density

	* pyatmlab/dataset.py(Dataset):

	- Add attribute 'range', to be set by hand

	* pyatmlab/datasets.py(TansoFTSv10x):

	- Set range, not really yet, placeholder

	* pyatmlab/graphics.py(print_or_show):

	- Use logging rather than print 

	* pyatmlab/math.py(regrid_matrix):

	- Added, regridding a matrix

	* pyatmlab/physics.py(AKstats):

	- Added method to plot sensitivity density as opposed to range.  Sort
	of the integral of the range.

2014-10-28  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-50

	* pyatmlab/collocations.py(CollocationDescriber):

	- Uh-uh, only plot averaging kernel stuff if we actually have
	averaging kernels.

	* pyatmlab/physics.py(AKStats):

	- Added method sensitivity_matrix_z.  Like sensitivity_matrix but a
	little more involved as I want to know what vertical range this
	corresponds to.

	- Also add contour labels.  To be tweaked.


2014-10-27  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-49

	* pyatmlab/collocations.py(CollocationDescriber):

	- Visualise sensitivity matrices
	- Started stub on partial columns, no content yet really

	* pyatmlab/physics.py(AKStats):

	- Added class to describe AK statistics, including a visualisation of
	sensitivities in a sensitivity matrix

2014-10-21  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-48

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- Update error checking when primary can't be road

	(CollocationDescriber):

	- Do not try to extrapolate profiles, a prioris, or averaging kernels.
	Rather, when the three do not come on identical z-grids (i.e. for
	Tanso they don't), rather limit them all to the least common range.
	This is not absolute, as each profile may have its own z-grid.
	Therefore, cut them ALL off if more than a fraction (defaulting to
	0.5) at a certain level is outside the range.

	- Add a lot more comments explaining what I'm doing

	- Rename extend_common_grid to regrid_profiles, to more accurately
	describe what's going on.

	- Ensure that xa, xh, ak are all on the same z-grid prior to further
	processing

	- Some related bugfixes

	- Also show negative part of averaging kernels

	* pyatmlab/math.py:

	(regrid_ak):

	- Optionall cut away when z is outside teh old grid

	(apply_W_A):

	- Bugfix for location of pinv

	(smooth_profile):

	- Centralise actual work to smoothen a single profile (no
	vectorisation)

	* pyatmlab/tools.py(array_equal_with_equal_nans):

	- Like array_equal, but consider nans to be equal too.

2014-10-03  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-47

	* pyatmlab/collocations.py(CollocationDescriber):

	- Add method to plot aks
	- Add no. of profiles to comparison plots

	* pyatmlab/dataset.py(Dataset):

	- use mutable cache for combine

	* pytmlab/datasets.py:

	- Add ak alias

2014-09-24  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-46

	* pyatmlab/collocations.py(CollocationDescriber):

	- Fix bug in correcting averaging kernels.  Were not actuallly being
	corrected!

	* pyatmlab/math.py(convert_ak_ap2vmr):

	- Move averaging kernel conversion to its own function

2014-09-23  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-45

	* pyatmlab/collocations.py(CollocationDescriber):

	- Add mask info in filename

	- Temporarily (?) disable setting a priori to nan outside interpolated
	range.  It should not be necessary to extrapolate a priori where I
	have averaging kernels but not a priori...

	- When calculating percentiles, consider only finite data.

	- Write data file for raw and smooth, filtered and unfiltered

	* pytmlab/dataset.py(Dataset):

	- Reduce verbosity when reading granules

	* pyatmlab/graphics.py(print_or_show):

	- Allow to write multiple data files

2014-09-17  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-44

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- When collocating, use default start_date, end_date derived from base
	datasets

	- When reading, only return those collocations in the time period
	requested, nothing more.

	(CollocationDescriber):

	- Work on figure filenames
	- Set intervals to lowest/highest values of timedelta64 in seconds, as
	 +/- infinity does not work as expected (see also
	 https://github.com/numpy/numpy/issues/5079).
	- Allow to set mask explicitly, externally
	- Don't extrapolate averaging kernel matrix
	
	* pyatmlab/dataset.py:

	(Dataset):

	- Add attribute 'related' that can be used to point to dmp-object

	(MultiFileDataset):

	- When reading period, include end points
	- When looking for granules, also consider 'tod' in seconds since
	midnght

	* pyatmlab/datasets.py(ACEFTS):

	- Orbit alone is not unique, (also) consider time
	- chain ValueError with InvalidFileError if reading fails, so it can
	be properly caught higher up

	* pyatmlab/math.py(linear_interpolation_matrix):

	- Pointed out caveat with extrapolation

2014-08-26  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-43

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- Use own errors to catch more tightly

	(CollocationDescriber):

	- Correct non-finite z as invalid

	- Also elsewhere, take care of nans (giving up on masked arrays)

	* pyatmlab/datasets.py(TansoFTSv10x):

	- Switch to k=1 spline interpolation (i.e. linear) to make
	extrapolation less bad.

	- Interpolate in logq, not in q

	- Give up on masked arrays, flag manually with nans instead, and make
	sure this doesn't mess up p2z (as masked arrays do!)

	* pyatmlab/physics.py(p2z_hydrostatic):

	- Catch negative p or T (could indicate flag or bug)

	* pyatmlab/tools.py(rec_concatenate):

	- More liberal concatenation of record arrays.  As long as the field
	names are the same, who cares that the order in the structured dtype
	is different?

2014-08-20  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-42

	* pyatmlab/collocations.py(CollocationsDescriber):

	- In smoothing, take care of the situation when xa and A come from
	another source and are not on the same vertical grid, so that
	interpolation is needed.  Only partially tested, likely still buggy.

	* pyatmlab/constants.py: +hecto

	* pyatmlab/dataset.py(Dataset):

	- Add method get_additional_field, not implemented here

	* pyatmlab/datasets.py: get hecto from constants

	* pyatmlab/math.py:

	(regrid_ak): Move W*A*W' to separate function

	(apply_W_A): Actual W*A*W'

	* pyatmlab/physics.py:

	(p2z_hydrostatic): Optionally extend p/t/q, USE AT OWN RISK,
	assumptions wholly inappropriate if extending is far!

2014-08-15  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-41

	* pyatmlab/collocations.py(CollocationDescriber):

	- Fix serious bug in smoothing, where Avmr-correction was not applied

	* pyatmlab/dataset.py:

	- Force each dataset to say if A should be corrected to Avmr

	* pyatmlab/datasets.py:

	- For TansoFTS, A needs no correction

	* pyatmlab/tools.py:

	- Added NotTrueNorFalse, inspired by
	  http://stackoverflow.com/a/25330344/974555

2014-08-15  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-40

	* pyatmlab/collocations.py(CollocationDescriber):

	- Reinsert extending xh with a-priori where outside the range of xh,
	this was accidentally deleted earlier

	* pyatmlab/dataset:

	(Dataset):

	- Cosmetic change

	(ProfileDataset.read):

	- Rather than having .read() as an abstract method, make an
	implementation here that extends the parent .read() with adding a
	z-profile upon/after reading.  Note that the real reading
	implementation is still in children's read_ so that's actually done
	before.  A new n_prof attribute will be used to determine profile
	sizes.

	(ProfileDataset.get_z):

	- Don't abstract this one either, rather return dt["z"].  Children
	super() this and catch the problem if there is no 'z' yet.

	* pyatmlab/datasets.py:

	(TansoFTSv10x):

	- Add n_prof

	- Try to get_z from super first

	- Account for another bug with masked arrays

	(TansoFTSv001):

	- Try to get_z from super first

	(ACEFTS):

	- Inherit from ProfileDataset

	- Add n_prof

	- Try to get_z from super first

2014-08-12  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-39

	* pyatmlab/collocations.py(CollocationDescriber):

	- When extending common grid, do not insist on constant z-grid

	- Clarify smoothing rules

	- WARNING NEEDS WORK BEFORE APPLYING TO NON-PEARL DATA

	* pyatmlab/dataset.py:

	(Dataset):

	- Clarified on risks of misusing start_date

	(MultiFileDataset):

	- When using a shelve copy, don't bother on read only.  Might only
	  mean things go wrong later.  Stored data lost anyway.

	* pyatmlab/datasets.py:

	(TansoFTSv10x):

	- Add comment clarifying pressure level mayhem

	- When getting z, merge pressure grids that T/q and CH4 are on, so I
	  can calculate z-levels for CH4-retrieval.  Needs a little bit of
	  extrapolation.

	* pyatmlab/physics.py(p2z_hydrostatic):

	- Restore test for p[0] < p0 < p[-1] as per Patrick discussion

2014-08-08  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-38

	* pyatmlab/dataset.py(MultiFileDataset):

	- When I can't open the granule start times file, open a *copy* read
	only.  Opening the same one read only still doesn't work...

	* pyatmlab/datasets.py:

	(TansoFTSBase, TansoFTSv001, TansoFTSv10x):

	- Split these classes into different versions.

	* pyatmlab/math.py:

	(regrid_ak): Added function for regridding averaging kernel

	* pyatmlab/physics.py(p2z_hydrostatic):

	- WARNING: Comment out p0/z0-check; is this really needed?
	  This might introduce bugs, caution needed!  WARNING!

2014-07-30  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-37

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- Initialise start_date and end_date based on the start and end dates
	for the constituent datasets.

	* pyatmlab/dataset.py:

	(StationaryDataset):

	- Added class that will super to any ground-station dataset

	* pyatmlab/math.py:

	(linear_interpolation_matrix):

	- Calculate transformation matrix for linear interpolation between two
	  grids
	
	* pyatmlab/physics.py:

	(p2z_hydrostatic):

	- Added two missing params to docstring

2014-07-23  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-36

	* pyatmlab/collocations.py(CollocationDescriber):
	
	- Comment out unused code and removed lying comment
	
	* pyatmlab/dataset.py:

	(Dataset):

	- Started on 'combine' method that finds corresponding measurements
	from another dataset (must be exact subset).

	(MultiFileDataset):

	- Get info or granule

	(SingleMeasurementPerFileDataset):

	- Copy info from filename into header

	* pyatmlab/datasets.py:

	- Adapt for info from filename copied, and for DMPs too

2014-07-09  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-35

	* pyatmlab/collocations.py:

	- Contain visualisation information in central dict
	- Extract bare colloc map code for getting dual-colloc map
	- Write no. of unique for each side of the pair

2014-06-25  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-34

	* pyatmlab/datasets.py:

	- Permit doy

2014-06-20  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-33

	* pyatmlab/collocations.py:

	- Implement one-directional smoothing

	* pyatmlab/datasets.py:

	- Add default p profile for TANSO

2014-06-10  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-32

	* pyatmlab/collocations.py(CollocatedDataset):

	- Bugfix: when reading many primaries, keep track of what secondaries
	already were returned; we don't want [(A1, B1), (A2, B1)] if both A
	and B are going to be concatenated in one yield!

	- Bugfix: have a small timedelta when considering segments, so we
	don't try to find new collocations for a 0.001 second period.

	- Bugfix: Make sure batches that are written to disk cover the full
	segment, without leaving any gaps, even if those gaps are verified to
	be free of collocations.

	* pyatmlab/datasets.py:

	- Use an OrderedDict rather than a dict when collecting header and
	body info, to guarantee that the subsequently converted dtype is
	consistent.

	- Give up on masked arrays.  They are buggy as hell.

2014-06-09  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-31

	* pyatmlab/collocations.py(CollocatedDataset):

	- Add capability to store collocations

	- Add capability to read collocations

	- Added higher-level collocation getting that will collocate as
	needed, read from disk as possible

	* pyatmlab/constants.py:

	- Added KB, KiB, MB, MiB

	* pyatmlab/dataset.py(HomemadeDataset):

	- Added capability to find granule given time

2014-06-05  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-30

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- When reading aggregated pairs, collect both primary and secondary.
	No reason to yield before having read plenty of data.

	- When collocating, make sure there are enough time bins.  Otherwise
	collocating will fail if time span is shorter than one bin.

	* pyatmlab/dataset.py:

	(Dataset):

	- When reading many, also catch OSError

	(MultiFileDataset): bugfixes

	(SingleMeasurementPerFileDataset):

	- Allow any header information, not just lat/lon/time

	(HomemadeDataset):

	- Comment out quicksave method for now, still not doing anything with
	it.

	* pyatmlab/datasets.py:

	(TansoFTS):

	- Also read ID

2014-05-15  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-29

	* pyatmlab/collocations.py:

	(CollocatedDataset.collocate): 
	
	- Fixed bug that caused duplicates near
	the poles, due to the number of longitude bins being considered
	exceeding the width of the Earth.

	(CollocationDescriber):

	- Also write out data for plots

	- For map, also add dashed line connecting pair to legend

	- Fix bug with text location for non-stationary map

	- Consider more statistics

	(find_collocation_duplicates):

	- Small function, belongs rather in test, may move later

	* pyatmlab/dataset.py:

	- Adapt for read functions now taking a fields argument

	- read_all too should be able to skip on error

	- Use new mutable cache rather than lru_cache that doesn't take
	non-hashable arguments

	* pyatmlab/datasets.py:

	- Also take v3.5 for ACE

	* pyatmlab/graphics.py:

	- Also use plotdatadir.  Perhaps doesn't belong in this module?

	* pyatmlab/tools.py:

	(mutable_cache):

	- Added, like lru_cache but can have mutable arguments.  Tried to use
	pickle but not all is picklable, currently using suboptimal way of
	str-representation of arguments

2014-05-06  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-28

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- Keep track of size in read_aggregated_pairs, don't hog memory, read
	at most 100 MB.

	(CollocationDescriber):

	- Start work on filter

	(interpolate_profiles):

	- Interpolate profiles on common grids

	(compare_profiles):

	- Return percentiles for difference, square difference, ratio

	(visualise_profile_comparison):

	- And plot this, using different linestyles

	* pyatmlab/dataset.py:

	- If the server is read-only, open granule start times read-only.

	* pyatmlab/datasets.py:

	(TansoFTS):

	- Fix CH4_profile alias

	- Convert ppm -> ppv on reading already

	- Use hstack to concat scalar to profile

	- Convert z to metre

	* pyatmlab/physics.py:

	(p2z_oversimplified):

	- Also permit numpy.ndarray, which can be a scalar (strang numpy
	corner case of array([0]) with ndim=0 not being like
	numpy.float32(0))

	* pyatmlab/tools.py:

	(_validate_one):

	- When stuff goes wrong, write more info, such as type and function
	name

2014-05-02  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-27

	* pyatmlab/collocations.py:

	(CollocationDescriber.compare_profile):

	- Started work on this method.  Unfinished.

	* pyatmlab/dataset.py:

	- Added field 'aliases'

	- Added class 'ProfileDataset' as mixin for any data-specific methods

	* pyatmlab/datasets.py:

	(TansoFTS):

	- Also derive from ProfileDataset
	- Add aliase
	- Implement get_z (work in progress, DRY!)

	(AceFTS):

	- Add aliases and implement get_z (trivial here)

2014-05-01  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-26

	* pyatmlab/collocations.py:

	(CollocatedDataset):

	- Be less verbose

	(CollocationDescriber):

	- Plot sat-sat collocations in a good way

2014-04-30  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-25

	* pyatlmab/dataset.py:

	- Add homegrown exception for any invalid file stuff

	(Dataset):

	- Don't try to read eternity
	- Log when reading granule

	(MultiFileDataset):

	- Catch error when start/end times not available

	* pyatlmab/datasets.py(ACEFTS):

	- Properly report error if file seems empty

	* pyatmlab/tools.py:

	(disk_lru_cache): Like lru_cache but stored on disk, and simpler

	
	* setup.py: Remove local/

	* local/: Deleted

2014-04-23  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-24

	* pyatmlab/collocations.py(CollocationDescriber):

	- Added new class for describing, visualising, etc. collocations.
	Currently contains lots of hardcoded stuff, but that should improve
	later on.

2014-04-22  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-23

	* pyatmlab/collocations.py(CollocatedDataset.collocate):

	- Fix bug causing collocations to be missed if in the last time or
	latitude bin
	- Make sure there are always at least two bins or binning will be
	problematic

	* pyatmlab/constants.py:

	- Added R, M_d, M_w

	* pyatmlab/datasets.py(TansoFTS):

	- More accurate pressure-to-elevation conversion
	
	* pyatmlab/local/datasets.py:

	- Fix TANSO path

	* pyatmlab/physics.py:

	- Add more accurate p2z-conversion, mostly stolen from atmlab

	* pyatmlab/tools.py:

	- For the validator, allow multiple validations

2014-04-11  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-22

	* pyatmlab/collocations.py:

	- Some small changes and bugfixes

	* pyatmlab/tools.py:

	- Added generic cat function for numpy.array or numpy.ma.array

2014-04-09  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-21

	* pyatmlab/collocations.py:

	- Add logging

	(CollocatedDataset.read_aggregated_pairs):

	- Iterate through aggregated pairs of granules

	(CollocatedDataset.collocate_period):

	- Collocate a longer period of time

	(CollocatedDataset.collocate):

	- Always return ndarray
	- Fix bug, now using linspace rather than arange to create bins, to
	make sure all data are always contained by the bins.  Verify this
	explicitly, RuntimeError if it isn't.
	- Work with indices instead of copying data

	(CollocatedDataset._collocate_bucket):

	- Work with indices and always return ndarray

	* pyatmlab/dataset.py:

	- Add name attribute

	(Dataset.read):

	- Also accept pathlib.Path object

	* pyatmlab/datasets.py:

	(NDACCAmes.get_time_from_granule_contents):

	- Need to read entire granule for times, discovered that I can't trust
	the header

	(NDACCAmes._read), (ACEFTS._read):

	- Fix lons outside (-180, 80)

	* pyatmlab/geo.py:

	(shift_longitudes): Be more liberal in accepted data

	(valid_geo): Check if geo-data (lat/lon) are valid

	* pyatmlab/local/datasets.py:

	- Use name for all datasets

	* pyatmlab/tools.py:

	(validate): Don't write out value if it's too long

2014-04-08  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-20

	* pyatmlab/collocations.py:

	- Add method find_granule_pairs that will yield all pairs of granules
	with potential time-overlap

	* pyatmlab/dataset{,s}.py:

	- Rename granules_for_period -> find_granules

	- Pass read through functools.lru_cache, do actual work in _read

	(MultiFileDataset):

	- pass time-hints as dict not sequence

	* pyatmlab/local/datasets.py:

	- Use granule_cache_file

2014-04-08  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-19

	* pyatmlab/dataset.py:

	- Added new method granules_for_period_sorted

	(MultiFileDataset):

	- Always cache granule time results

	* pyatmlab/datasets.py:

	(NDACCAmes): Implemented get_time_from_granule_contents

	* pyatmlab/local/datasets.py:

	- Added start and end dates for ndacc_ames_eureka

2014-04-07  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-18

	* pyatmlab/collocations.py(CollocatedDataset):

	- Added some notes on essential TODO-optimisations in collocation
	algorithm.

	- Return same type (masked or not) as input

	* pyatmlab/dataset.py:

	(Dataset):

	- Read robustly, when reading many files, don't fail if a single one
	has a problem (optionally)

	(MultiFileDataset):

	- Have datefields and refields as attributes

	- Helper method _getyear

	- More appropriate implementation in _get_times_for_granule

	* pyatmlab/datasets.py:

	- Moved from pyatmlab/local/datasets.py

	- Renamed NDACCGainesBruker to NDACCAmes

	* pyatmlab/geo.py:

	- Started file, small utility to shift longitudes to common grid,
	should be used for collocation grid estimation

	* pyatmlab/local/datasets.py:

	- Moved all content that is not really local to its own file, keep
	only skeleton here
2014-04-04  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatlmlab-0-0-17

	* pyatmlab/dataset.py:

	(Dataset):

	- Masked arrays don't play well together with datetime64.  Retreat to
	unmasked arrays when needed.

	(MultiFileDataset):

	- New class containing functionality for any dataset spread over
	multiple files.

	(SingleMeasurementPerFileDataset):

	- Special case of MultiFileDataset

	* pyatmlab/local/datasets.py:

	(ACEFTS):

	- First implementation for a SingleMeasurementPerFileDataset

	* pyatmlab/math.py:

	- Added function to calculate average position on a sphere

	* pyatmlab/tools.py:

	- Added warning that validator doesn't work with *args, **kwargs

	* setup.py:

	- Needs Python 3.4 (sorry)

2014-03-19  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-16

	* pyatmlab/collocations.py:

	- Added missing import

	(CollocatedDataset):

	- Preserve masked array when concatenating collocs

	* pyatmlab/graphics.py:

	- Added missing import

	* pyatmlab/local/datasets.py:

	(TansoFTS):

	- Added method vmr_to_column_density

	(TansoFTS.read):

	- Add both raw *and* interpolated profiles

2014-03-18  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-15

	* pyatmlab/constants.py:

	- Added ppm, ppb, ppt

	* pyatmlab/graphics.py:

	- Added missing import

	* pyatmlab/local/datasets.py(TansoFTS):

	- Revert to interpolated profiles, easier to deal with
	- Added fields holding pressure profiles for temperature, ch4

	* pyatmlab/physics.py(vmr2nd):

	- Added conversion function

	(p2z_oversimplified):

	- Added oversimplified p2z function

2014-03-14  Gerrit Holl  <gerrit.holl@utoronto.ca>:

	* pyatmlab-0-0-14

	* pyatmlab/collocations.py(CollocatedDataset):

	- fix remaining bugs.  It works now.

	* pyatmlab/local/datasets.py:

	- Add name field to both classes

	* pyatmlab/stats.py:

	- Bugfix (was a hard find)

2014-03-13  Gerrit Holl  <gerrit.holl@utoronto.ca>

	* pyatmlab-0-0-13

	* pyatmlab/collocations.py(CollocatedDataset):

	- Renamed some attributes

	- Added property for max_interval, which is always a timedelta64
	object

	- Fixed the implementation of collocate and _collocate_bucket.  Seems
	correct now.

	* pyatmlab/dataset.py:
	
	(Dataset):

	- Fixed __setattr__ for properties
	- Added dummy implementation for abstract methods

	(NDACCGainesBruker.read):

	- Correctly add datetime64 to time field
	- Hard-coded fix for lat/lon

	* pyatmlab/stats.py(bin_nd):

	- Added some checks that bins are correct

	- Don't .pop() off bins/binners, just take the last value and pass
	all-but-one on; passed on value should in any case be a *copy*, not a
	reference!

	- It didn't work at all for >2 dimensions.  Now it seems correct.


2014-03-12  Gerrit Holl  <gerrit.holl@utoronto.ca>

	* pyatmlab-0-0-12

	* pyatmlab/collocations.py:

	- Added, started CollocatedDataset definition.  Most of the work is in
	the method .collocate and ._collocate_bucket, which collocates two
	ndarrays in lat/lon/time.  To be tested!

	* pyatmlab/dataset.py:

	- Added a .read_all() method.  Now and here an alias of read_period()
	without arguments.  Also added a HomemadeDataset class, currently
	empty.

	* pyatmlab/local/:

	- New directory, will contain stuff actually localised for my place,
	but can be adapted by users on other sites.

	* setup.py: Also include pyatmlab.local

2014-03-06  Gerrit Holl  <gerrit.holl@utoronto.ca>

	* pyatmlab-0-0-11

	* pyatmlab/dataset.py:

	- Fixed syntax for metaclass
	- Don't use ugly wanted attribute, rather just insist attributes exist
	in class, dynamically adding is asking for bugs imnsho
	- Fixed syntax for abstract methods

2014-03-05  Gerrit Holl  <gerrit.holl@utoronto.ca>

	* pyatmlab-0-0-10

	* pyatmlab/dataset.py:

	- Started classes abstracting datasets

2014-02-12  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-9

	* pyatmlab/db.py(AtmosphericDatabase):

	- Added __getitem__ and __setitem__ ability to set new fields, i.e.
	db["IWV"] = some_calculation(db.data).

	* pyatmlab/instruments.py:

	- Fix some small buggies

2014-01-10  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-8

	* pyatmlab/physics.py:

	(mixingratio2density): Expand doc

	(rh2mixingratio): added

	(specific2iwv): Fix doc

	(rh2iwv): added

	(mixingratio2iwv): added

	* pyatmlab/arts.py: Removed, unused

	* pyatmlab/{graphics,instruments}: Do not expose 'now'

	* pyatmlab/tools.py: Fix sphinx-syntax-error in docstring

	* doc/source/index.rst:

	Added db, instruments

2014-01-09  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-7

	* pyatmlab/graphics.py:
	
	(print_or_show): Write ints as ints

	(datadir): Move to io.py

	* pyatmlab/instruments.py: Added.  Contains classes to describe
	instruments, channels, write out SRFs, and more.  Mostly copied from
	PyARTS.  Also contains some channel definitions.

	* pyatmlab/io.py:

	(write_matrix_as_latex_table): Added.  Somewhat inflexible code to
	write out a 2-D array as a LaTeX table.

	(datadir): Moved from graphics.py

	* pyatmlab/physics.py:

	(wavelength2frequency) (wavenumber2frequency) (frequency2wavelength)
	(frequency2wavenumber): Added.  Mostly copied from PyARTS.

	* pyatmlab/tools.py:

	(validate): Validate function with arguments, using annotations.

	(validator): Decorator to do the same

2013-12-17  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-6

	* doc/source/index.rst: Add new modules

	* pyatmlab/constants.py: Added.  Various constants.

	* pyatmlab/io.py(get_chevallier_arts_path):  Added.  Return path to
	Chevallier-formatted-for-ARTS data.  Does not add any dependency.

	* pyatmlab/math.py: Added.  Small maths utilities.

	* pyatmlab/meta.py(expanddoc): Added.  Docstring decorator helper.

	* pyatmlab/physics.py: Added.  Small physics utilities.

	* pyatmlab/stats.py(bin_nd): Recursive n-dimensional bucketing.

	* pyatmlab/tools.py: Added switch-class-recipe.

2013-12-13  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-5

	* pyatmlab/__init__.py: Add docstring

	* pyatmlab/arts.py: Added, but effectively empty, use PyARTS for now

	* pyatmlab/config.py: Reread configuration every time, don't cache

	* pyatmlab/graphics.py: Copy some utility functions from my private trove

	* pyatmlab/tools.py -> pyatmlab/meta.py: Rename

	* pyatmlab/stats.py: Added, utility statistical thingies

	* setup.py, doc/source/conf.py: Adapt for renaming tools -> meta

	* doc/source/index.rst: Add meta module

2013-12-12  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-4

	* pyatmlab/config.py: Forgot to import os.path

	* pyatmlab/io.py: Rearrange function behaviours

2013-12-12  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-3

	* doc/source/conf.py: Automagically obtain version

	* pyatmlab/io.py: Fix syntax error in docstring

	* pyatmlab/tools.py: Added.  Contains various functions.

	* setup.py: Moved function to read ChangeLog to tools, call from there

2013-12-12  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-2

	* pyatmlab/io.py: Improve docs

	* setup.py: Automagically obtain version, fix e-mail addy

2013-12-12  Gerrit Holl  <gerrit.holl@smhi.se>

	* pyatmlab-0-0-1

	* LICENSE: Fixed name, added e-mail.

	* doc/Makefile, doc/source/conf.py: Added, made by sphinx

	* doc/source/index.rst: Added.  First docs, initiateted by sphinx.

	* pyatmlab/config.py: Added.  Started configuration framework.

	* pyatmlab/io.py: Added.  Copied Chevallier reading from PyARTS.

	* pyatmlab/setup.py: Added, made by setuptools.
